package main
import "fmt"

func addSub(a, b int) (int, int, int) {
    sum := a + b
    diff := a - b
    prod := a * b
    return sum, diff, prod
}

func main() {
    var n1, n2 int
    fmt.Print("Enter the two numbers to add, subtract and multiply:")
    fmt.Scanln(&n1, &n2)
    sum, diff, prod := addSub(n1, n2)
    fmt.Printf("Sum: %d\n", sum)
    fmt.Printf("Difference: %d\n", diff)
    fmt.Printf("Product: %d\n", prod)
}

q2.
package main

import (
	"encoding/xml"
	"fmt"
	"io/ioutil"
	"os"
)

type Person struct {
	XMLName xml.Name `xml:"person"`
	Name    string   `xml:"name"`
	Age     int      `xml:"age"`
	Email   string   `xml:"email"`
}

func main() {
	file, err := os.Open("test.xml")
	if err != nil {
		fmt.Println("Error opening file:", err)
		return
	}
	defer file.Close()

	data, err := ioutil.ReadAll(file)
	if err != nil {
		fmt.Println("Error reading file:", err)
		return
	}

	var p Person

	// Unmarshal XML data into the Person structure
	err = xml.Unmarshal(data, &p)
	if err != nil {
		fmt.Println("Error unmarshalling XML:", err)
		return
	}

	// Display the structure
	fmt.Println("Name:", p.Name)
	fmt.Println("Age:", p.Age)
	fmt.Println("Email:", p.Email)
}
